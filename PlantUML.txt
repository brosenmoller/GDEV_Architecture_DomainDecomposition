@startuml
!theme carbon-gray

title Hades - UML
header
  Assignment for HKU Game Dev Architecture
  Weapon System : Ben RosenmÃ¶ller
  Keepsake System : Joeri van Alphen
endheader

'General Code
class Player
{
  +int Health
  -WeaponManager weaponManager;
  -KeepsakeManager keepsakeManager;
  +void ProcessDamageEvent(DamageHitInfo _damageHitInfo)
}

Player *-- WeaponManager
Player *-- KeepsakeManager

'Weapon System
struct Damage
{
  +int MainDamage;
  +int BackstabDamage;
  +bool IsPoisned;
}

struct DamageHitInfo 
{
  +bool BackstabDamage;
  +bool RangedDamage;
  +bool StandardAttackDamage;
  +bool SpecialAttackDamage;
  +bool DashAttackDamage;
  +WeaponData WeaponData
  +Enemy DamagedEnemy;
}

struct WeaponData 
{
  +int StandardAttackDamage;
  +int SpecialAttackDamage;
  +int DashAttackDamage;
}

interface IDamageable
{
  +void TakeDamage(Damage damage);
}

abstract class Weapon
{
  WeaponData baseWeaponData;
  +abstract void ApplyEffect(out Damage damage);
  +abstract void SpecialAttack();
  +abstract void StandardAttack();
}

skinparam groupInheritance 10
class StygianSword extends Weapon
class VarathaSpear extends Weapon
class AegisShield extends Weapon
class CoronachBow extends Weapon
class MalphonTwinfists extends Weapon
class ExagryphGun extends Weapon

class WeaponManager
{
  -Weapon[] unlockedWeapons;
  -Weapon equipedWeapon;
}

Weapon::baseWeaponData -r-> WeaponData
Player::ProcessDamageEvent <- DamageHitInfo
'Weapon::SpecialAttack --> Player
'Weapon::StandardAttack --> Player

InputManager -> Weapon : Event Invoke
WeaponManager *-- Weapon
Damage -d-o Weapon
Damage -l-o IDamageable

'KeepsakeSystem
class KeepsakeManager
{
  -Keepsake[] unlockedKeepsakes;
  -Keepsake[] equipedKeepsakes;
  
  +void ApplyEffect(...);
}

abstract class Keepsake
{
   +void ApplyEffect(...)
}

KeepsakeManager *-- Keepsake

@enduml
